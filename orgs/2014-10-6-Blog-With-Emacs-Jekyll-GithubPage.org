#+STARTUP: showall indent
#+STARTUP: hidestars
#+OPTIONS: toc:nil
#+begin_html
---
excerpt: describe the principles in detail. and how to blog with emacs jekyll and github page.
layout: post
category : howto
tags : [jekyll, tutorial, github]
---
#+end_html

* About this article

* The basic principles
** What is jekyll and static site
Static site, as it's name, is delivered to the user exactly as stored. The dynamic part of the page, like comment, must be add as plugins. The advantage is that it's cheap and fast to develop, and easy to host. With generators like jekyll, you can build a site in seconds.
** What is github pages
Github pages are public webpages freely hosted and easily published through github. There are two ways to set up a github page.
First, you can create a  repository called "username.github.io", where username is your username for github. Then this repository is your default git page repo. Push your site to master branch of this repo. You will see the site at https://username.github.io/ . 
Second, actually, every repository can be a git hub page by creating a branch called gh-pages. All the content on this branch, can be visit via https://username.github.io/project. For example, my blog repository https://github.com/terrylu87/blog . I create gh-pages branch on it. So that you can visit my site by  https://terrylu87.github.io/blog.
** The emacs and org-mode

* Why emacs-jekyll-githubpages
I use emacs org-mode to write the blog. the org-mode provide a perfect way to compose logical oriented articles.
* How to set up the blog
** Set up your github pages
This whouldn't be a problem if you understand the basic principle describe in previous section. For me, I prefer the gh-pages branch.
#+begin_src bash
git clone https://username.github.io/project.git blog
cd blog
git checkout -b gh-pages
#+end_src
** Generate the static site
There are many tutorials online about how to generate a static blog. The document on the jekyll official website is good. But if you want a customized theme, or support the archive and tags and other feature. You need a better starting point. I use jekyll bootstrap : http://jekyllbootstrap.com/. The jekyll bootstrap support theme, which can eassily be installed and changed.
#+begin_src bash
git clone https://github.com/plusjade/jekyll-bootstrap.git jb
#+end_src
** Test your site.
install ruby and javascript enviroment
#+BEGIN_SRC bash
sudo apt-get install nodejs ruby-dev
#+END_SRC
Install Jekyll
#+BEGIN_SRC bash
sudo gem install jekyll
#+END_SRC
Test the site
#+BEGIN_SRC bash
cd blog
jekyll serve
#+END_SRC
** Push your site to github
#+BEGIN_SRC bash
cd blog/
cp -rf jb/* .
git commit
git push origin gh-pages
#+END_SRC
* Other interesting stuff
** Comments
I use disqus for comment. Regisrate an accont at disqus official site. They will provide some tutorials. But since our jekyll bootstrap had disqus integration. We just need change the \_config.yml file under jekyll root dir.
#+BEGIN_SRC css  
comments :
    provider : disqus
    disqus :
      short_name : your_short_name
#+END_SRC
** Theme and decoration
You can find a theme at http://themes.jekyllbootstrap.com/
#+BEGIN_SRC bash
cd blog/
rake theme:install git="https://github.com/jekyllbootstrap/theme-the-program.git"
rake theme:install name="THEME-NAME"
#+END_SRC
* Todo
** Add search function